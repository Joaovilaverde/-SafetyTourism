// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafetyTourism.Data;

namespace SafetyTourism.Migrations
{
    [DbContext(typeof(SafetyContext))]
    [Migration("20201214113624_Controllersv2")]
    partial class Controllersv2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("SafetyTourism.Models.AfectadoPor", b =>
                {
                    b.Property<int>("AfectadoPorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("DoencaId")
                        .HasColumnType("int");

                    b.Property<int?>("Gravidade")
                        .HasColumnType("int");

                    b.Property<int>("InfectadosPor100k")
                        .HasColumnType("int");

                    b.HasKey("AfectadoPorId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("DoencaId");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("SafetyTourism.Models.Destino", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinoId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("SafetyTourism.Models.Doenca", b =>
                {
                    b.Property<int>("DoencaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecomendacaoId")
                        .HasColumnType("int");

                    b.HasKey("DoencaId");

                    b.HasIndex("RecomendacaoId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("SafetyTourism.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FuncionarioId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("SafetyTourism.Models.Recomendacao", b =>
                {
                    b.Property<int>("RecomendacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecomendacaoId");

                    b.ToTable("OfficeAssignment");
                });

            modelBuilder.Entity("SafetyTourism.Models.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tel")
                        .HasColumnType("int");

                    b.HasKey("UtilizadorId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("SafetyTourism.Models.AfectadoPor", b =>
                {
                    b.HasOne("SafetyTourism.Models.Destino", "destino")
                        .WithMany("Afectados")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafetyTourism.Models.Doenca", "doenca")
                        .WithMany()
                        .HasForeignKey("DoencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("destino");

                    b.Navigation("doenca");
                });

            modelBuilder.Entity("SafetyTourism.Models.Doenca", b =>
                {
                    b.HasOne("SafetyTourism.Models.Recomendacao", "recomendacao")
                        .WithMany()
                        .HasForeignKey("RecomendacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recomendacao");
                });

            modelBuilder.Entity("SafetyTourism.Models.Destino", b =>
                {
                    b.Navigation("Afectados");
                });
#pragma warning restore 612, 618
        }
    }
}
